package org.example;


//  Числа Фибоначчи — это числа в следующей целочисленной последовательности (Fn):
//0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, ...
//такой как
//F(n) = F(n-1) + F(n-2) с F(0) = 0 и F(1) = 1.
//Учитывая число, скажем prod (для продукта), мы ищем два числа Фибоначчи F(n) и F(n+1), проверяя
//F(n) * F(n+1) = прод.
//Ваша функция ProductFib принимает целое число (prod) и возвращает массив:
//[F(n), F(n+1), true] или {F(n), F(n+1), 1} или (F(n), F(n+1), True)
//в зависимости от языка, если F(n) * F(n+1) = прод.
//Если вы не найдете два последовательных F(n), проверяющих F(n) * F(n+1) = prod, вы вернетесь
//[F(n), F(n+1), ложь] или {F(n), F(n+1), 0} или (F(n), F(n+1), ложь)
//F(n) — наименьшее значение, например F(n) * F(n+1) > prod.
//Некоторые примеры возврата:
//(зависит от языка)
public class ProdFib {
    public static long[] productFib(long prod) {
        // your code
        return null;
    }
}

